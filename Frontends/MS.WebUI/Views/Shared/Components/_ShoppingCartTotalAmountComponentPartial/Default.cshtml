@model BasketTotalDto

@{
    decimal total = 0;
    decimal totalPrice = 0;
    decimal kDV = 0;
    decimal discount = 0;
    if (Model.DiscountRate != 0)
    {
        total = (Model.TotalPrice / (decimal.Parse("1,10")));
        discount = total * (decimal.Parse(Model.DiscountRate.ToString()) / 100);
        totalPrice = (total - discount) * (decimal.Parse("1,10"));
        kDV = totalPrice - (total - discount);
    }
    else
    {
        total = Model.TotalPrice / (decimal.Parse("1,10"));
        totalPrice = Model.TotalPrice;
        kDV = Model.TotalPrice - total;
    }

}

@if (Model.DiscountCode != null)
{
    <h6 class="section-title position-relative text-uppercase mb-3 text-danger"><span class="bg-secondary pr-3">@Model.DiscountCode Kuponu Uygulandı</span></h6>
}

<h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Sipariş Özeti</span></h5>
<div class="bg-light p-30 mb-5">
    <div class="border-bottom pb-2">
        <p style="font-size:15px; color:lightgray">@ViewBag.shippingNote</p>
        <div class="d-flex justify-content-between">
            <h6>Ürün Fiyatı</h6>
            <h6 id="productTotal">@ViewBag.total.ToString("N2")₺</h6>
        </div>
        <div class="d-flex justify-content-between">
            <h6 class="font-weight-medium">KDV Tutarı</h6>
            <h6 class="font-weight-medium" id="taxAmount">@ViewBag.tax.ToString("N2")₺</h6>
        </div>
        @if (ViewBag.discountRate > 0)
        {
            <div class="d-flex justify-content-between">
                <h6 class="font-weight-medium">İndirim Oranı</h6>
                <h6 class="font-weight-medium">@ViewBag.discountRate%</h6>
            </div>
            <div class="d-flex justify-content-between">
                <h6 class="font-weight-medium">İndirim Tutarı</h6>
                <h6 class="font-weight-medium" id="discountAmount">-@((ViewBag.total * ViewBag.discountRate / 100).ToString("N2"))₺</h6>
            </div>
        }
        <div class="d-flex justify-content-between">
            <h6 class="font-weight-medium">Kargo Ücreti</h6>
            <h6 class="font-weight-medium" id="shippingFee">@ViewBag.shippingFee.ToString("N2")₺</h6>
        </div>
    </div>

    <div class="pt-2">
        <div class="d-flex justify-content-between mt-2">
            <h5>Toplam</h5>
            <h5 id="cartTotal">@ViewBag.totalAmount.ToString("N2")₺</h5>
        </div>
        <form asp-controller="ShoppingCart" asp-action="CompleteOrder" method="post">
            <input type="hidden" name="discountRate" value="@Model.DiscountRate" />
            <input type="hidden" name="discountName" value="@Model.DiscountCode" />
            <button type="submit" class="btn btn-block btn-primary font-weight-bold my-3 py-3">Siparişi Tamamla</button>
        </form>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
    // Miktar artırma ve azaltma butonlarına tıklama olaylarını bağla
    $(".btn-plus, .btn-minus").off("click").on("click", function () {
        var row = $(this).closest("tr");
        var productId = $(this).data("product-id");
        var action = $(this).data("action");
        var quantityInput = row.find(".quantity-input");
        var currentQuantity = parseInt(quantityInput.val()) || 0;

        // Yeni miktarı hesapla
        var newQuantity = action === "increase" ? currentQuantity + 1 : currentQuantity - 1;
        if (newQuantity < 1) return; // Miktar 1'in altına düşmesin

        // AJAX isteği gönder
        $.ajax({
            url: "/ShoppingCart/UpdateQuantity",
            method: "POST",
            data: {
                productId: productId,
                quantity: newQuantity
            },
            success: function (response) {
                // Başarılı olduğunda miktarı ve toplam fiyatı güncelle
                quantityInput.val(newQuantity);
                var price = parseFloat(row.find(".align-middle:nth-child(3)").text().replace("₺", "").replace(",", "."));
                row.find(".total-price").text((newQuantity * price).toFixed(2) + "₺");

                // Sunucudan dönen değerlerle toplamları güncelle
                $("#productTotal").text(response.total.toFixed(2) + "₺");
                $("#taxAmount").text(response.tax.toFixed(2) + "₺");
                $("#shippingFee").text(response.shippingFee.toFixed(2) + "₺");
                $("#cartTotal").text(response.totalAmount.toFixed(2) + "₺");

                if (response.total > 500 || response.shippingFee === 0) {
                    $("#shippingNote").text("500₺ ve Üzeri Kargo Bedava (Satıcı Karşılar)");
                } else {
                    $("#shippingNote").text("");
                }
            },
            error: function () {
                alert("Miktar güncellenirken bir hata oluştu.");
            }
        });
    });
});
</script>
